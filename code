import tkinter as tk
from tkinter import messagebox
import csv
import os
import datetime
import matplotlib.pyplot as plt

# File for storing waste data
FILE_NAME = "waste_data.csv"

# Function to save waste data
def save_data():
    try:
        date = datetime.date.today()
        organic = float(entry_organic.get())
        plastic = float(entry_plastic.get())
        ewaste = float(entry_ewaste.get())
        paper = float(entry_paper.get())
        metal = float(entry_metal.get())

        # Save data to CSV file
        file_exists = os.path.isfile(FILE_NAME)
        with open(FILE_NAME, mode="a", newline="") as file:
            writer = csv.writer(file)
            if not file_exists:
                writer.writerow(["Date", "Organic", "Plastic", "E-Waste", "Paper", "Metal"])
            writer.writerow([date, organic, plastic, ewaste, paper, metal])

        messagebox.showinfo("Success", "Waste Data Saved!")
        analyze_waste(organic, plastic, ewaste)
    except ValueError:
        messagebox.showerror("Error", "Enter valid numbers only!")

# Function to analyze waste habits and give tips
def analyze_waste(organic, plastic, ewaste):
    tip = "Good job! Keep reducing waste."
    if plastic > 2:
        tip = "Reduce plastic waste! Use reusable bags & bottles."
    elif ewaste > 0:
        tip = "Dispose of e-waste at an authorized collection center."

    lbl_tips.config(text="Tip: " + tip)

# Function to show waste data trends
def show_graph():
    if not os.path.isfile(FILE_NAME):
        messagebox.showwarning("No Data", "No waste data available.")
        return

    dates, organic, plastic, ewaste, paper, metal = [], [], [], [], [], []
    with open(FILE_NAME, mode="r") as file:
        reader = csv.reader(file)
        next(reader)  # Skip header
        for row in reader:
            dates.append(row[0])
            organic.append(float(row[1]))
            plastic.append(float(row[2]))
            ewaste.append(float(row[3]))
            paper.append(float(row[4]))
            metal.append(float(row[5]))

    if not dates:
        messagebox.showwarning("No Data", "No valid data found.")
        return

    # Plot waste trends
    plt.figure(figsize=(8, 5))
    plt.plot(dates, organic, marker='o', linestyle='-', label="Organic Waste")
    plt.plot(dates, plastic, marker='s', linestyle='-', label="Plastic Waste")
    plt.plot(dates, ewaste, marker='^', linestyle='-', label="E-Waste")
    plt.plot(dates, paper, marker='x', linestyle='-', label="Paper Waste")
    plt.plot(dates, metal, marker='d', linestyle='-', label="Metal Waste")
    plt.xlabel("Date")
    plt.ylabel("Waste Amount (kg)")
    plt.title("Waste Generation Trends")
    plt.legend()
    plt.xticks(rotation=45)
    plt.grid(True)
    plt.tight_layout()
    plt.show()
# GUI Setup
root = tk.Tk()
root.title("Smart Waste Tracker")

tk.Label(root, text="Enter Daily Waste (kg)").pack()

tk.Label(root, text="Organic:").pack()
entry_organic = tk.Entry(root)
entry_organic.pack()

tk.Label(root, text="Plastic:").pack()
entry_plastic = tk.Entry(root)
entry_plastic.pack()

tk.Label(root, text="E-Waste:").pack()
entry_ewaste = tk.Entry(root)
entry_ewaste.pack()

tk.Label(root, text="Paper:").pack()
entry_paper = tk.Entry(root)
entry_paper.pack()

tk.Label(root, text="Metal:").pack()
entry_metal = tk.Entry(root)
entry_metal.pack()

tk.Button(root, text="Save Data", command=save_data).pack()
tk.Button(root, text="Show Graph", command=show_graph).pack()

lbl_tips = tk.Label(root, text="Tip: ")
lbl_tips.pack()
